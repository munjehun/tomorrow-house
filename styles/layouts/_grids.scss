/*
* Mobile (<768px)
* fixture --------------------- sm
* # of columns ---------------- 4 
* gutter ---------------------- 20px
* margin ---------------------- 5px
* container-size -------------- 100% - (5px * 2)
*
* Tablet (>=768px)
* fixture --------------------- md
* # of columns ---------------- 12
* gutter ---------------------- 20px (보통 gutter는 고정)
* margin ---------------------- 30px
* container-size -------------- 100% - (30px * 2)
* max-container-size ---------- 960px 
*
* Desktop (>=1200px)
* fixture --------------------- lg
* # of columns ---------------- 12
* gutter ---------------------- 20px (보통 gutter는 고정)
* unit ------------------------ 75px
* margin ---------------------- auto
* container-size -------------- 1140px
* max-container-size ---------- 1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-breakpoint: 768px;
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-breakpoint: 1200px;
$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns; //1140px으로 하기보다 변수로 지정!

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap; //기본값은 nowrap이지만, wrap으로 하면 자식들의 값이 커지면 다음줄로 넘어간다.
  }

  //css 속성 선택자 : class가 col- 로 시작하는 모든 html
  [class^='col-'] {
    padding: 0 $gutter/2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      // $i를 #{}으로 감싸주어야 변수처럼 사용 가능!

      // width: $i / $sm-columns * 100%;
      width: percentage($i / $sm-columns); //percentage() 내장함수 사용!
    }
  }

  @media screen and (min-width: $md-breakpoint) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }
  @media screen and (min-width: $lg-breakpoint) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
